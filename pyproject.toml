[dependency-groups]
dev = [
  "poethepoet>=0.37.0",
  "pre-commit>=4.3.0"
]

[project]
name = "jga-blog-page"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  "mkdocs-material[git,imaging,recommended]>=9.6.17",
  "mkdocs>=1.6.1",
  "pymdown-extensions>=10.16.1",
  "rendercv[full]>=2.2"
]

[tool.poe.tasks]
# setup
_setup_pre-commit = "pre-commit install"
setup = {sequence = ["_setup_pre-commit"], help = "Setup dev environment"}
# update
_update_pre-commit = "pre-commit autoupdate -j0"
_update_python_packages = {shell = "uv sync --upgrade && uvx uv-bump"}
_update_flake = "nix flake update"
update = {sequence = ["_update_flake", "_update_pre-commit", "_update_python_packages"], help = "Update dependencies"}
update_parallel = {shell = 'set -e; poe _update_flake & poe _update_pre-commit & poe _update_python_packages & wait', help = "Update dependencies in parallel"}
# build
# build_rendercv = {shell = 'mkdir -p site/assets && rendercv render -o $(mktemp -d) --pdf-path site/assets/Jakob_Stender_Guldberg_CV.pdf ./cv/Jakob_Stender_Guldberg_CV.yml'}
build_rendercv = {shell = 'rendercv render -o $(mktemp -d) --pdf-path docs/assets/Jakob_Stender_Guldberg_CV.pdf ./cv/Jakob_Stender_Guldberg_CV.yml'}
build_mkdocs = 'mkdocs build'
build = {sequence = ["build_rendercv", "build_mkdocs"], help = "Build the CV and the MkDocs site."}
# deploy
mkdocs_deploy = {cmd = "mkdocs gh-deploy --force"}
deploy = {sequence = ["mkdocs_deploy"], help = "Build the site and deploy to GitHub Pages."}
# serve
_mkdocs_serve = {cmd = "mkdocs serve"}
serve = {sequence = ["build_rendercv", "_mkdocs_serve"], help = "Serve the mkdocs pages locally."}
# clean
_clean_mkdocs = {shell = 'rm -rf site .cache/mkdocs .cache/mkdocs-material .cache'}
_clean_rendercv = {shell = 'rm -rf .rendercv .rendercv-cache .cache/rendercv docs/assets/Jakob_Stender_Guldberg_CV.pdf'}
_clean_py = {shell = 'find . -type d -name "__pycache__" -prune -exec rm -rf {} +; find . -type f -name "*.py[co]" -delete'}
clean = {sequence = ["_clean_mkdocs", "_clean_rendercv", "_clean_py"], help = "Remove MkDocs build/cache, RenderCV artifacts, and Python bytecode caches."}
clean_parallel = {shell = 'set -e; poe _clean_mkdocs & poe _clean_rendercv & poe _clean_py & wait', help = "Remove MkDocs build/cache, RenderCV artifacts, and Python bytecode caches in parallel."}
