---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
ci:
  autoupdate_commit_msg: 'chore: update pre-commit hooks'
  autofix_commit_msg: 'style: pre-commit fixes'
  autoupdate_schedule: monthly
  skip: []
  submodules: false
# Default stages for hooks
default_stages: [pre-commit, commit-msg, pre-push]

# Default hook types to install
default_install_hook_types: [pre-commit, commit-msg, pre-push]
repos:
  # Standard meta hooks
  - repo: meta
    hooks:
      - id: check-hooks-apply  # Check hook applicability
      - id: check-useless-excludes  # Check for unused excludes

  # Basic file checks from pre-commit-hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0  # Use the latest stable version
    hooks:
      - id: check-added-large-files  # Prevent giant files from being committed
      - id: check-case-conflict  # Check for files that would conflict on case-insensitive filesystems
      - id: check-merge-conflict  # Check for files that contain merge conflict strings
      - id: check-toml  # Check toml syntax
      - id: check-yaml  # Check yaml syntax
        args: [--unsafe]  # Allow unsafe constructs for flexibility (e.g., MkDocs)
      - id: detect-private-key  # Checks for the presence of private keys
      - id: end-of-file-fixer  # Ensures files end with a newline
      - id: fix-byte-order-marker  # Removes utf-8 byte order marker
      - id: mixed-line-ending  # Replaces or checks mixed line endings
        args: [--fix=auto]
      - id: trailing-whitespace  # Trims trailing whitespace

  #  # Formatting for various file types with Prettier
  # - repo: https://github.com/rbubley/mirrors-prettier  # Using rbubley mirror
  #   rev: v3.6.2  # Use a recent version of Prettier
  #   hooks:
  #     - id: prettier
  #       types_or: [html, css, scss, javascript, json]
  #       args: [--prose-wrap=always]  # Wrap markdown prose
  #       additional_dependencies:
  #         - prettier@3.2.4  # Pin Prettier version
  #         - prettier-plugin-sort-json@3.1.0  # Optional: Sort JSON keys

  # Spell checking
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1  # Use a recent version of codespell
    hooks:
      - id: codespell
        args: [--write-changes]
        additional_dependencies:
          - tomli  # Needed for pyproject.toml configuration

  # YAML linting (more strict than basic check)
  - repo: https://github.com/lyz-code/yamlfix
    rev: 1.18.0
    hooks:
      - id: yamlfix
        files: \.(yml|yaml)$

  # TOML sorting
  - repo: https://github.com/pappasam/toml-sort
    rev: v0.24.2  # Use a recent version of toml-sort
    hooks:
      - id: toml-sort-fix
        files: \.toml$

  # Secret scanning
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0  # Use a recent version of gitleaks
    hooks:
      - id: gitleaks

  # Validate pyproject.toml structure
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.24.1  # Use a recent version
    hooks:
      - id: validate-pyproject
        additional_dependencies: ['validate-pyproject-schema-store[all]']
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.18.1  # Note: This uses Ruby, requires Ruby environment
    hooks:
      - id: markdownlint-cli2
        files: \.(md|mdown|markdown)$
        args: [--fix, --config, .markdownlint.yml]
  - repo: local
    hooks:
      - id: mkdocs_build_check
        name: Check mkdocs builds
        language: system
        entry: uv run mkdocs build
        args: [--strict]
        pass_filenames: false
